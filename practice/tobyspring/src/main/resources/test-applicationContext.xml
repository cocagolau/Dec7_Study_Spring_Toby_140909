<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/springbooktest" />
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>
	
	<!-- 새로운 jdbcContext를 bean으로 등록 -->
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	<bean id="mailSender" class="me.dec7.user.service.DummyMailSender" />
	
	<tx:annotation-driven />
	<context:annotation-config />
	
	<!-- 
		http://redutan.blogspot.kr/2014/05/spring-3-defaultadvisorautoproxycreator.html
		자기참조 빈 설정과 DefaultAdvisorAutoProxyCreator가 동시 존재시 아래처럼
		java.lang.IllegalStateException: Failed to load ApplicationContext 예외 발생
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	 -->
	
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
	</aop:config>
	
	<tx:advice id="transactionAdvice">
		<tx:attributes>
			<!-- PROPAGATION이 REQUIRED는 생략가능 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	
	<bean id="userService" class="me.dec7.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<bean id="sqlService" class="me.dec7.user.sqlservice.DefaultSqlService" />
	
	<bean id="userDao" class="me.dec7.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="sqlAdd" value="insert into users(id, name, password, email, level, login, recommend) values(?,?,?,?,?,?,?)" /> -->
		<!--
			spring 설정파일안에 sql을 두고 DI하면 손쉽게 사용 가능하나
			 1. 관리가 복잡해짐
			 2. sql을 꼭 spring의 bean 설정방법을 이용할 필요도 없음
		  -->
		<!--
		SqlService로 이동 
		<property name="sqlMap">
			<map>
				<entry key="add" value="insert into users(id, name, password, email, level, login, recommend) values(?,?,?,?,?,?,?)" />
				<entry key="get" value="select * from users where id = ?" />
				<entry key="getAll" value="select * from users order by id" />
				<entry key="deleteAll" value="delete from users" />
				<entry key="getCount" value="select count(*) from users" />
				<entry key="update" value="update users set name=?, password=?, level=?, login=?, recommend=? where id=?" />
			</map>
		</property>
		-->
		<property name="sqlService" ref="sqlService" />
	</bean>
	
	<bean id="sqlService" class="me.dec7.user.sqlservice.SimpleSqlService">
		<property name="sqlMap">
			<map>
				<entry key="userAdd" value="insert into users(id, name, password, email, level, login, recommend) values(?,?,?,?,?,?,?)" />
				<entry key="userGet" value="select * from users where id = ?" />
				<entry key="userGetAll" value="select * from users order by id" />
				<entry key="userDeleteAll" value="delete from users" />
				<entry key="userGetCount" value="select count(*) from users" />
				<entry key="userUpdate" value="update users set name=?, password=?, level=?, login=?, recommend=? where id=?" />
			</map>
		</property>
	</bean>
	
	<bean id="testUserService" class="me.dec7.user.service.UserServiceTest$TestUserServiceImpl" parent="userService" />

</beans>
