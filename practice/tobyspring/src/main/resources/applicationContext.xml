<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/springbook" />
		<property name="username" value="spring" />
		<property name="password" value="book" />
	</bean>
	

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.server.com" />
	</bean>
	
	<bean id="transactionAdvice" class="me.dec7.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*" />
	</bean>
	
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
	
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		
		<!-- 
			advice와 advisor를 동시에 설정해 줄수 있는 property
			list에 advice나 advisor의 bean id를 값으로 넣어주면 됨
			기존 ref attribute를 사용하는 DI 방식과 다름을 주의
		 -->
		<property name="interceptorNames">
			<list>
				<!-- 한개 이상의 value 태그를 넣을 수 있음 -->
				<value>transactionAdvisor</value>
			</list>
		</property>
	</bean>
	
	<!-- <bean id="userService" class="me.dec7.user.service.UserServiceTx">
		<property name="userDao" ref="userDao" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="userService" ref="userServiceImpl" />
	</bean> -->
	<!--
	<bean id="userService" class="me.dec7.user.service.TxProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="pattern" value="upgradeLevels" />
		<!-- 
			serviceInterfaces는 Class타입
			Class타입은 value를 사용해 Class 혹은 Interface의 이름을 넣어주면됨
			spring은 수정자메소드의 파라미터타입을 확인해 자동변환
		
		<property name="serviceInterface" value="me.dec7.user.service.UserService" />
	</bean>
	-->
	
	<bean id="userServiceImpl" class="me.dec7.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
		<property name="mailSender" ref="mailSender" />
	</bean>
	
	<bean id="userDao" class="me.dec7.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>


</beans>
